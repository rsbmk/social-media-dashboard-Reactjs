{"version":3,"sources":["header.js","card.js","top-card-list.js","card-small.js","overview.js","switch.js","App.js","serviceWorker.js","index.js"],"names":["Header","children","className","Card","username","followers","todayFollowers","icon","name","cardClass","src","alt","cardListData","id","TopCardList","map","cardData","key","CardSmall","pageView","growth","cardSmallList","Overview","Swtich","useState","checked","setChecked","ref","useRef","changeMedia","mq","matches","document","body","classList","remove","add","useEffect","window","matchMedia","addListener","onChange","event","current","type","htmlFor","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a152d2f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./header.css\";\r\n\r\nfunction Header({ children }) {\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"header-grid\">\r\n          <div>\r\n            <h1>Social Media Dashboard</h1>\r\n            <p className=\"header-total\">Total Followers: 23,004</p>\r\n          </div>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./card.css\";\r\nfunction Card({ username, followers, todayFollowers, icon, name }) {\r\n  const cardClass = `card ${name}`;\r\n  return (\r\n    <article className={cardClass}>\r\n      <p className=\"card-title\">\r\n        <img src={icon} alt=\"\" />\r\n        {username}\r\n      </p>\r\n      <p className=\"card-followers\">\r\n        <span className=\"card-followers-number\">{followers}</span>\r\n        <span className=\"card-followers-title\">Followers</span>\r\n      </p>\r\n      <p className=\"card-today\">\r\n        <img src=\"images/icon-up.svg\" alt=\"\" />\r\n        {todayFollowers} today\r\n      </p>\r\n    </article>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./card.js\";\r\nimport \"./top-card-list.css\";\r\n\r\nconst cardListData = [\r\n  {\r\n    username: \"@rsbmk\",\r\n    id: 1,\r\n    followers: \"1483\",\r\n    todayFollowers: 10,\r\n    icon: \"images/icon-facebook.svg\",\r\n    name: \"facebook\",\r\n  },\r\n  {\r\n    username: \"@rsbmk\",\r\n    id: 2,\r\n    followers: \"28k\",\r\n    todayFollowers: -12,\r\n    icon: \"images/icon-twitter.svg\",\r\n    name: \"twitter\",\r\n  },\r\n  {\r\n    username: \"@rsbmk\",\r\n    id: 3,\r\n    followers: \"6k\",\r\n    todayFollowers: 24,\r\n    icon: \"images/icon-instagram.svg\",\r\n    name: \"instagram\",\r\n  },\r\n  {\r\n    username: \"@rsbmk\",\r\n    id: 4,\r\n    followers: \"12k\",\r\n    todayFollowers: 15,\r\n    icon: \"images/icon-youtube.svg\",\r\n    name: \"youtube\",\r\n  },\r\n];\r\n\r\nfunction TopCardList() {\r\n  return (\r\n    <section className=\"top-cards\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"grid\">\r\n          {cardListData.map((cardData) => (\r\n            <Card key={cardData.id} {...cardData} />\r\n          ))}\r\n          {/* <article className=\"card twitter\">\r\n            <p className=\"card-title\">\r\n              <img src=\"images/icon-twitter.svg\" alt=\"\" />\r\n              @LeonidasEsteban\r\n            </p>\r\n            <p className=\"card-followers\">\r\n              <span className=\"card-followers-number\">28k</span>\r\n              <span className=\"card-followers-title\">Followers</span>\r\n            </p>\r\n            <p className=\"card-today\">\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              12 Today\r\n            </p>\r\n          </article>\r\n          <article className=\"card instagram\">\r\n            <p className=\"card-title\">\r\n              <img src=\"images/icon-instagram.svg\" alt=\"\" />\r\n              @LeonidasEsteban\r\n            </p>\r\n            <p className=\"card-followers\">\r\n              <span className=\"card-followers-number\">6k</span>\r\n              <span className=\"card-followers-title\">Followers</span>\r\n            </p>\r\n            <p className=\"card-today\">\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              12 Today\r\n            </p>\r\n          </article>\r\n          <article className=\"card youtube\">\r\n            <p className=\"card-title\">\r\n              <img src=\"images/icon-youtube.svg\" alt=\"\" />\r\n              @LeonidasEsteban\r\n            </p>\r\n            <p className=\"card-followers\">\r\n              <span className=\"card-followers-number\">12k</span>\r\n              <span className=\"card-followers-title\">Followers</span>\r\n            </p>\r\n            <p className=\"card-today\">\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              12 Today\r\n            </p>\r\n          </article> */}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default TopCardList;\r\n","import React from \"react\";\r\nimport \"./card-small.css\";\r\n\r\nexport default function CardSmall({ icon, pageView, growth }) {\r\n  return (\r\n    <div className=\"card-small\">\r\n      <p className=\"card-small-views\">Page Views</p>\r\n      <p className=\"card-small-icon\">\r\n        <img src={icon} alt=\"\" />\r\n      </p>\r\n      <p className=\"card-small-number\">{pageView}</p>\r\n      <p className=\"card-small-percentage\">\r\n        <span>\r\n          <img src=\"images/icon-up.svg\" alt=\"\" />\r\n          {growth}\r\n        </span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport CardSmall from \"./card-small\";\r\nimport \"./overview.css\";\r\nconst cardSmallList = [\r\n  {\r\n    icon: \"images/icon-facebook.svg\",\r\n    pageView: \"87\",\r\n    growth: 3,\r\n    key: 1,\r\n  },\r\n  {\r\n    icon: \"images/icon-twiter.svg\",\r\n    pageView: \"52\",\r\n    growth: 2257,\r\n    key: 2,\r\n  },\r\n  {\r\n    icon: \"images/icon-instagram.svg\",\r\n    pageView: \"5462\",\r\n    growth: 1375,\r\n    key: 3,\r\n  },\r\n  {\r\n    icon: \"images/icon-youtube.svg\",\r\n    pageView: \"117\",\r\n    growth: 303,\r\n    key: 4,\r\n  },\r\n];\r\n\r\nexport default function Overview() {\r\n  return (\r\n    <section className=\"overview\">\r\n      <div className=\"wrapper\">\r\n        <h2>Overview - Today</h2>\r\n        <div className=\"grid\">\r\n          {cardSmallList.map(({ icon, pageView, growth, key }) => (\r\n            <CardSmall\r\n              icon={icon}\r\n              pageView={pageView}\r\n              growth={growth}\r\n              key={key}\r\n            />\r\n          ))}\r\n          {/* <div className=\"card-small\">\r\n          <p class=\"card-small-views\">Likes</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-facebook.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">52</p>\r\n          <p class=\"card-small-percentage is-danger\">\r\n            <span>\r\n              <img src=\"images/icon-down.svg\" alt=\"\" />\r\n              2%\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"card-small\">\r\n          <p class=\"card-small-views\">Likes</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-instagram.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">5462</p>\r\n          <p class=\"card-small-percentage\">\r\n            <span>\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              2257%\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"card-small\">\r\n          <p class=\"card-small-views\">Profile Views</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-instagram.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">52k</p>\r\n          <p class=\"card-small-percentage\">\r\n            <span>\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              1375%\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"card-small\">\r\n          <p class=\"card-small-views\">Retweets</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-twitter.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">117</p>\r\n          <p class=\"card-small-percentage\">\r\n            <span>\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              303%\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"card-small\">\r\n          <p class=\"card-small-views\">Likes</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-twitter.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">507</p>\r\n          <p class=\"card-small-percentage\">\r\n            <span>\r\n              <img src=\"images/icon-up.svg\" alt=\"\" />\r\n              553%\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"card-small\">\r\n          <p class=\"card-small-views\">Likes</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-youtube.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">107</p>\r\n          <p class=\"card-small-percentage is-danger\">\r\n            <span>\r\n              <img src=\"images/icon-down.svg\" alt=\"\" />\r\n              19%\r\n            </span>\r\n          </p>\r\n        </div>\r\n        <div class=\"card-small\">\r\n          <p class=\"card-small-views\">Total Views</p>\r\n          <p class=\"card-small-icon\">\r\n            <img src=\"images/icon-youtube.svg\" alt=\"\" />\r\n          </p>\r\n          <p class=\"card-small-number\">1407</p>\r\n          <p class=\"card-small-percentage is-danger\">\r\n            <span>\r\n              <img src=\"images/icon-down.svg\" alt=\"\" />\r\n              12%\r\n            </span>\r\n          </p>\r\n        </div>*/}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useRef, useEffect, useState } from \"react\";\r\nimport \"./switch.css\";\r\n\r\nfunction Swtich() {\r\n  const [checked, setChecked] = useState(false);\r\n  const ref = useRef(null);\r\n  function handleChange(event) {\r\n    setChecked(ref.current.checked);\r\n    if (ref.current.checked) {\r\n      document.body.classList.remove(\"is-light-mode\");\r\n      document.body.classList.add(\"is-dark-mode\");\r\n    } else {\r\n      document.body.classList.remove(\"is-dark-mode\");\r\n      document.body.classList.add(\"is-light-mode\");\r\n    }\r\n  }\r\n\r\n  function changeMedia(mq) {\r\n    setChecked(mq.matches);\r\n    if (mq.matches) {\r\n      document.body.classList.remove(\"is-light-mode\");\r\n      document.body.classList.add(\"is-dark-mode\");\r\n    } else {\r\n      document.body.classList.remove(\"is-dark-mode\");\r\n      document.body.classList.add(\"is-light-mode\");\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    const mq = window.matchMedia(\"(prefers-color-scheme: dark)\");\r\n    mq.addListener(changeMedia);\r\n    setChecked(mq.matches);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dark-mode\">\r\n      <p className=\"dark-mode-tittle\"> Dark Mode</p>\r\n      <input\r\n        ref={ref}\r\n        checked={checked}\r\n        onChange={handleChange}\r\n        type=\"checkbox\"\r\n        className=\"checkbox\"\r\n        id=\"checkbox\"\r\n      />\r\n      <label className=\"switch\" htmlFor=\"checkbox\"></label>\r\n    </div>\r\n  );\r\n}\r\nexport default Swtich;\r\n","import React from \"react\";\nimport \"./globals.css\";\nimport Header from \"./header.js\";\nimport TopCardList from \"./top-card-list.js\";\nimport Overview from \"./overview\";\nimport Switch from \"./switch.js\";\n\nfunction App() {\n  return (\n    <>\n      <Header>\n        <Switch />\n      </Header>\n      <TopCardList />\n      <Overview />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}